<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
	http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dmg</groupId>
    <artifactId>v68gameserver</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <modules>
        <module>admin-server</module>
        <module>club-server</module>
        <module>lobby-server</module>
        <module>common-server</module>
        <module>register-server</module>
        <module>config-server</module>
        <module>gateway-server</module>
        <module>niuniu-server</module>
        <module>zhajinhua-server</module>
        <module>bairenniuniu-server</module>
        <module>bairenzhajinhua-server</module>
        <module>fish-server</module>
        <module>bjl-server</module>
        <module>doudizhu-server</module>
        <module>redblackwar-server</module>
        <module>dmg-common</module>
        <module>game-config-server</module>
        <module>data-parent</module>
        <module>game-record-server</module>
        <module>bcbm-server</module>
        <module>lhj-server</module>
        <module>lhj-common</module>
        <module>game-task-server</module>
		<module>agent-server</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
    </parent>

    <!--<properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>-->

    <properties>
        <spring-boot.version>2.1.7.RELEASE</spring-boot.version>
        <spring-boot-admin.version>2.1.6</spring-boot-admin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <hutool.version>4.4.5</hutool.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <swagger.fox.version>2.9.2</swagger.fox.version>
        <curator.version>2.10.0</curator.version>
        <velocity.version>1.7</velocity.version>
        <lcn.version>4.1.0</lcn.version>
        <jasypt.version>2.1.1</jasypt.version>
        <ttl.version>2.10.2</ttl.version>
        <minio.version>6.0.2</minio.version>
        <elastic-job-lite.version>2.1.5</elastic-job-lite.version>
        <security.oauth.version>2.3.5.RELEASE</security.oauth.version>
        <security.oauth.auto.version>2.1.2.RELEASE</security.oauth.auto.version>
        <activiti.version>5.22.0</activiti.version>
        <zipkin.version>2.12.2</zipkin.version>
        <zipkin-storage-mysql.version>2.8.4</zipkin-storage-mysql.version>
        <docker.url>http://47.108.64.228:2375</docker.url>
        <docker.plugin.version>0.4.12</docker.plugin.version>
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <lombok.version>1.18.8</lombok.version>
        <mybatis.version>3.1.0</mybatis.version>
        <fastjson.version>1.2.56</fastjson.version>
        <gson.version>2.8.5</gson.version>
        <okhttp.version>3.14.0</okhttp.version>
        <dozer.version>5.5.1</dozer.version>
        <guava.version>25.0-jre</guava.version>
        <cglib.version>3.2.9</cglib.version>
    </properties>

    <build>
        <finalName>${project.name}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <!--将插件绑定在package这个phase上。也就是说，用户只需执行mvn package ，就会自动执行mvn docker:build -->
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <imageName>dmg/${project.name}:latest</imageName>
                        <dockerHost>${docker.url}</dockerHost>
                        <dockerDirectory>${project.basedir}</dockerDirectory>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                        <serverId>docker-hub</serverId>
                        <registryUrl>https://index.docker.io/v1/</registryUrl>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <target>${maven.compiler.target}</target>
                    <source>${maven.compiler.source}</source>
                    <encoding>UTF-8</encoding>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--<build> <plugins> <plugin> <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId> <configuration> <layout>ZIP</layout>
        <includes> <include> <groupId>nothing</groupId> <artifactId>nothing</artifactId>
        </include> </includes> </configuration> <executions> <execution> <goals>
        <goal>repackage</goal> </goals> </execution> </executions> </plugin> </plugins>
        </build> -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.SR2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>aliyun</id>
            <name>aliyun</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>